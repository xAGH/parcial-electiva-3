name: Deploy Lambdas with API Gateway

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Deploy lambda SaludoSimple
        run: |
          zip simple_greeting.zip lambdas/simple_greeting.py
          aws lambda update-function-code --function-name SaludoSimple --zip-file fileb://simple_greeting.zip

      - name: Deploy lambda SaludoPersonalizado
        run: |
          zip custom_greeting.zip lambdas/custom_greeting.py
          aws lambda update-function-code --function-name SaludoPersonalizado --zip-file fileb://custom_greeting.zip

      - name: Deploy lambda CalculadoraBasica
        run: |
          zip basic_calculator.zip lambdas/basic_calculator.py
          aws lambda update-function-code --function-name CalculadoraBasica --zip-file fileb://basic_calculator.zip

      - name: Deploy lambda ProcesamientoTexto
        run: |
          zip process_text.zip lambdas/process_text.py
          aws lambda update-function-code --function-name ProcesamientoTexto --zip-file fileb://process_text.zip

      - name: Deploy lambda ConexionDynamoDB
        run: |
          zip dynamodb_connection.zip lambdas/dynamodb_connection.py
          aws lambda update-function-code --function-name ConexionDynamoDB --zip-file fileb://dynamodb_connection.zip
          aws lambda update-function-configuration --function-name ConexionDynamoDB --role arn:aws:iam::717279706992:role/LambdaFullAccessToDynamoDb

      - name: Create API Gateway
        run: |
          API_ID=$(aws apigatewayv2 create-api \
            --name "LambdaAPI" \
            --protocol-type HTTP \
            --target arn:aws:lambda:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:SaludoSimple \
            --query 'ApiId' --output text)

          echo "API ID: $API_ID"

          aws apigatewayv2 create-route \
            --api-id $API_ID \
            --route-key "GET /saludo-simple" \
            --target arn:aws:lambda:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:SaludoSimple

          aws apigatewayv2 create-route \
            --api-id $API_ID \
            --route-key "GET /saludo-personalizado" \
            --target arn:aws:lambda:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:SaludoPersonalizado

          aws apigatewayv2 create-route \
            --api-id $API_ID \
            --route-key "GET /calculadora-basica" \
            --target arn:aws:lambda:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:CalculadoraBasica

          aws apigatewayv2 create-route \
            --api-id $API_ID \
            --route-key "POST /procesamiento-texto" \
            --target arn:aws:lambda:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:ProcesamientoTexto

          aws apigatewayv2 create-route \
            --api-id $API_ID \
            --route-key "GET /conexion-dynamodb" \
            --target arn:aws:lambda:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:ConexionDynamoDB

      - name: Deploy API Gateway
        run: |
          aws apigatewayv2 create-deployment \
            --api-id $API_ID \
            --stage-name prod

          API_URL=$(aws apigatewayv2 get-api \
            --api-id $API_ID \
            --query 'ApiEndpoint' --output text)

          echo "API URL: $API_URL"
